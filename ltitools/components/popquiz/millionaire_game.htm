<!-- Millionaire Game partial -->

<script src="plugins/hermetic/ltitools/assets/libs/easeljs-0.7.1.min.js"></script>
<script src="plugins/hermetic/ltitools/assets/libs/tweenjs-0.5.1.min.js"></script>
<script src="plugins/hermetic/ltitools/assets/libs/movieclip-0.7.1.min.js"></script>
<script src="plugins/hermetic/ltitools/assets/libs/preloadjs-0.4.1.min.js"></script>
<script src="plugins/hermetic/ltitools/assets/libs/millionaireh5.js"></script>

<!-- body onload="init();" style="background-color:#D4D4D4"-->
<canvas id="canvas" width="960" height="540" style="background-color:#FFFFFF"></canvas>
<button type="button" onClick="sendGrade()">Test Grading</button>

<script>

	var canvas, stage, exportRoot, loader;
	gameQuest = {{gameQuest|raw}};
	//console.log('millionaire gameQuest:',gameQuest.length, gameQuest);
	// warn if less than 15 questions
	//console.log('millionaire role:',role);
	if(role == 'Learner') { showIntro(); }
	function showIntro() {
		canvas = document.getElementById("canvas");
		images = images||{};

		var loader = new createjs.LoadQueue(false);
		loader.addEventListener("fileload", handleFileLoad);
		loader.addEventListener("complete", handleComplete);
		loader.loadManifest(lib.properties.manifest);// 3rd
	}

	function handleFileLoad(evt) {
		if (evt.item.type == "image") { images[evt.item.id] = evt.result; }
	}

	function handleComplete() {
		exportRoot = new lib.millionaireh5();
		console.log('Millionaire handleComplete:');// 4th
		
		stage = new createjs.Stage(canvas);
		stage.addChild(exportRoot);
		stage.update();
		stage.enableMouseOver();

		createjs.Ticker.setFPS(lib.properties.fps);
		createjs.Ticker.addEventListener("tick", stage);
	}

    function sendGrade() {
        // use RestAPI
        var outcomeurl = {{outcomeurl|raw}};//
        var sourcedid = {{sourcedid|raw}};//Canvas: lis_result_sourcedid
        var grade = 1;// 0~1, 0.5=50%
        console.log('sendGrade: outcomeurl:',outcomeurl);// course in session
        /*
        var xmlbody = '<?xml version = "1.0" encoding = "UTF-8"?>\
		<imsx_POXEnvelopeRequest xmlns="http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0">\
		  <imsx_POXHeader>\
			<imsx_POXRequestHeaderInfo>\
			  <imsx_version>V1.0</imsx_version>\
			  <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\
			</imsx_POXRequestHeaderInfo>\
		  </imsx_POXHeader>\
		  <imsx_POXBody>\
			<replaceResultRequest>\
			  <resultRecord>\
				<sourcedGUID>\
				  <sourcedId>'+sourcedid+'</sourcedId>\
				</sourcedGUID>\
				<result>\
				  <resultScore>\
					<language>en</language>\
					<textString>'+grade+'</textString>\
				  </resultScore>\
				</result>\
			  </resultRecord>\
			</replaceResultRequest>\
		  </imsx_POXBody>\
		</imsx_POXEnvelopeRequest>';
        */
        //var promise = $.post(outcomeurl, {'xmlbody':xmlbody}, function (data) {
        var promise = $.get('onGradePopquiz', {'outcomeurl':outcomeurl,'sourcedid':sourcedid,'grade':grade}, function (data) {
            console.log('PROMISE result:',data);
        }).fail(function (data) { console.log('PROMISE failed:',data.responseText); });
        
        /*
        var promise = $.get('onGradePopquiz', {'assignment':assignmentID, 'grade':1, 'sourcedid':sourcedid}, function (data) {
            console.log('PROMISE result:',data);// retruns submission
        }).fail(function (data) { console.log('PROMISE failed:',data.responseText); });
        */
    }
</script>
